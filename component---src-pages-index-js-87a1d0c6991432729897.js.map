{"version":3,"sources":["webpack:///./src/components/PostsList/PostListItem.module.scss","webpack:///./src/components/PostsList/PostListItem.js","webpack:///./src/components/PostsList/index.js","webpack:///./src/pages/index.js"],"names":["module","exports","PostListItem","readTime","item","title","frontmatter","fields","slug","className","styles","PostListItem__title","to","PostListItem__description","dangerouslySetInnerHTML","__html","description","excerpt","tags","split","map","PostListItem__tag","PostListItem__date","time","date","PostListItem__imageCover","src","coverImage","publicURL","PostsList","paths","items","path","window","location","pathname","length","posts","filter","node","toLocaleLowerCase","includes","key","pageQuery","Home","data","siteTitle","site","siteMetadata","allMarkdownRemark","edges","Layout","pageName"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,aAAe,2CAA2C,oBAAsB,kDAAkD,0BAA4B,wDAAwD,mBAAqB,iDAAiD,kBAAoB,gDAAgD,yBAA2B,yD,qMCyD9XC,EArDM,SAAC,GAAY,IAGxBC,EAHaC,EAAU,EAAVA,KACfC,EAAQD,EAAKE,YAAYD,OAASD,EAAKG,OAAOC,KAmBpD,OACE,6BAASC,UAAWC,IAAOR,aAAa,QACtC,yBAAKO,UAAU,YACb,gCACE,wBAAIA,UAAWC,IAAOC,qBACpB,kBAAC,OAAD,CAAOC,GAAIR,EAAKG,OAAOC,MACpBH,KAIP,iCACE,uBACEI,UAAWC,IAAOG,0BAClBC,wBAAyB,CACvBC,OAAQX,EAAKE,YAAYU,aAAeZ,EAAKa,WAGjD,6BArBOb,EAAKE,YAAYY,KAAKC,MAAM,KAC/BC,KAAI,SAAAhB,GAAI,OAAI,2BAAOK,UAAWC,IAAOW,mBAAoBjB,OAuB7D,2BAAOK,UAAWC,IAAOY,qBArCzBnB,EAAWC,EAAKE,YAAYiB,KAAjB,KACQnB,EAAKE,YAAYiB,KACtB,GACTnB,EAAKE,YAAYkB,KAA5B,IAAoCrB,MAqClC,yBAAKM,UAAU,YACb,yBACEA,UAAWC,IAAOe,yBAClBC,IApCCtB,EAAKE,YAAYqB,WAChBvB,EAAKE,YAAYqB,WAAWC,UAC5B,UCaGC,EAtBG,SAAC,GAAa,IAJxBC,EAIYC,EAAW,EAAXA,MACZC,GALAF,EAAQG,OAAOC,SAASC,SAAShB,MAAM,MAChCW,EAAMM,OAAO,GAKpBC,EAAQN,EAAMO,QAAO,SAAAlC,GAEzB,OAAK4B,EACE5B,EAAKmC,KAAKjC,YAAYY,KAAKsB,oBAAoBC,SAAST,EAAKQ,qBADlDpC,KAIpB,OACE,6BAEEiC,EAAMjB,KAAI,gBAAGmB,EAAH,EAAGA,KAAH,OACR,kBAAC,EAAD,CACEnC,KAAMmC,EACNG,IAAKH,EAAKhC,OAAOC,YCDdmC,GAFEC,UAZF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMX,EAAe,EAAfA,SACdY,EAAYD,EAAKE,KAAKC,aAAa3C,MACnCgC,EAAQQ,EAAKI,kBAAkBC,MAErC,OACE,kBAACC,EAAA,EAAD,CAAQjB,SAAUA,EAAU7B,MAAOyC,EAAWM,SAAS,SACrD,kBAAC,IAAD,CAAK/C,MAAM,YACX,kBAAC,EAAD,CAAW0B,MAAOM,MAOF","file":"component---src-pages-index-js-87a1d0c6991432729897.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostListItem\":\"PostListItem-module--PostListItem--2F__c\",\"PostListItem__title\":\"PostListItem-module--PostListItem__title--Vr-yd\",\"PostListItem__description\":\"PostListItem-module--PostListItem__description--2SzNV\",\"PostListItem__date\":\"PostListItem-module--PostListItem__date--2hvZV\",\"PostListItem__tag\":\"PostListItem-module--PostListItem__tag--1UoC8\",\"PostListItem__imageCover\":\"PostListItem-module--PostListItem__imageCover--nJj6G\"};","import React from \"react\"\nimport { Link } from \"gatsby\";\nimport styles from \"./PostListItem.module.scss\";\n\n\nconst PostListItem = ({item}) => {\n  const title = item.frontmatter.title || item.fields.slug;\n  const getDetails = () => {\n    const readTime = item.frontmatter.time \n                      ? `Â· ${item.frontmatter.time}` \n                      : \"\";\n    return  `${item.frontmatter.date} ${readTime}` \n  };\n\n  const getCoverImage = () => {\n   return  item.frontmatter.coverImage \n          ? item.frontmatter.coverImage.publicURL \n          : null;\n  };\n\n  const getTags = () => {\n    const tags = item.frontmatter.tags.split(\";\");\n  return tags.map(item => <small className={styles.PostListItem__tag}>{item}</small>);\n  };\n\n  return (\n    <article className={styles.PostListItem+' row'}>\n      <div className=\"col-sm-9\">\n        <header>\n          <h3 className={styles.PostListItem__title}>\n            <Link  to={item.fields.slug}>\n              {title}\n            </Link>\n          </h3>\n        </header>\n        <section>\n          <p\n            className={styles.PostListItem__description}\n            dangerouslySetInnerHTML={{\n              __html: item.frontmatter.description || item.excerpt,\n            }}\n          />\n          <div>\n            {getTags()}\n          </div>\n          <small className={styles.PostListItem__date}>{getDetails()}</small>\n        </section>\n      </div>\n      <div className=\"col-sm-3\">\n        <img \n          className={styles.PostListItem__imageCover}\n          src={getCoverImage()}\n        />\n      </div>\n  </article>\n  );\n};\n\nexport default PostListItem;","import React from \"react\"\nimport PostListItem from \"./PostListItem\";\n\nconst getPath = () => {\n  const paths = window.location.pathname.split(\"/\");\n  return paths[paths.length-1];\n};\n\nconst PostsList = ({items}) => {\n  const path = getPath();\n  const posts = items.filter(item => {\n    debugger;\n    if (!path) return item;\n    return item.node.frontmatter.tags.toLocaleLowerCase().includes(path.toLocaleLowerCase());\n  });\n\n  return (\n    <div>\n    {\n      posts.map(({ node }) => (\n        <PostListItem \n          item={node} \n          key={node.fields.slug}\n        />\n      ))\n    }\n    </div>\n  );\n};\n\nexport default PostsList;","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/Seo\"\n\nimport PostsList from \"../components/PostsList\";\n\nconst Home = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle} pageName=\"Posts\">\n      <SEO title=\"Welcome\" />\n      <PostsList items={posts} />\n    </Layout>\n  )\n}\n\nexport default Home;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n            time\n            coverImage{\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}